VERSION=3.13.1
CHECKSUM=b8b99c4a16fbc7d6694a70af044dbaac

#VERSION=3.11.3
#CHECKSUM=e04cbb1aaccde4a33c8843e75a1fba15

#VERSION=3.7.6
#CHECKSUM=152c1f15f535af22fc015de1d3099db3

#VERSION=3.6.4
#CHECKSUM=e7a5253621253eef8f5a19ddc03dd0d4

NAME=petsc-lite-${VERSION}
SOURCE=http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/
PACKING=.tar.gz

EXTRACTSTO=petsc-${VERSION}
BUILDCHAIN=custom

INSTALL_PATH=${INSTALL_PATH}/${EXTRACTSTO}


#########################################################################

CONFOPTS="
  --with-debugging=0
  --with-shared-libraries=1
  --with-mpi=1
  --with-x=0
  --with-64-bit-indices=0
"

if [ "${NATIVE_OPTIMIZATIONS}" = "true" ]; then
    CONFOPTS="${CONFOPTS} \
      COPTFLAGS='-O3 -march=native -mtune=native' \
      CXXOPTFLAGS='-O3 -march=native -mtune=native' \
      FOPTFLAGS='-O3 -march=native -mtune=native'"
fi


for external_pkg in hypre; do
    CONFOPTS="${CONFOPTS} --download-${external_pkg}=1"
done

if [ ! -z "$CC" ]; then
    CONFOPTS="${CONFOPTS} CC=$CC"
fi

if [ ! -z "$CXX" ]; then
    CONFOPTS="${CONFOPTS} CXX=$CXX"
fi

if [ ! -z "$FC" ]; then
    CONFOPTS="${CONFOPTS} FC=$FC"
fi

if [ ! -z "$F77" ]; then
    CONFOPTS="${CONFOPTS} F77=$F77"
fi

if [ ! -z "$F90" ]; then
    CONFOPTS="${CONFOPTS} F90=$F90"
fi

if [ ! -z "${MKL_DIR}" ]; then
    cecho ${INFO} "petsc: configuration with MKL"
    cecho ${INFO} "petsc: configuration with blas-lapack-dir=${MKL_DIR}"
    CONFOPTS="${CONFOPTS} --with-blas-lapack-dir=${MKL_DIR}"
else
    if [ ! -z "${BLAS_LIB}" ]; then
        cecho ${INFO} "petsc: configuration with --with-blas-lapack-lib=${BLAS_LIB}"
        CONFOPTS="${CONFOPTS} --with-blas-lapack-lib=${BLAS_LIB}"
    fi
fi

# Add ParMETIS, if present
if [ ! -z "${PARMETIS_DIR}" ]; then
    cecho ${INFO} "PETSc: configuration with ParMETIS"
    CONFOPTS="\
        ${CONFOPTS} \
        --with-parmetis-dir=${PARMETIS_DIR} \
	--with-metis-dir=${PARMETIS_DIR}"

    for external_pkg in scalapack mumps; do
        CONFOPTS="${CONFOPTS} --download-${external_pkg}=1"
    done
fi

#########################################################################

package_specific_setup () {
    cd ${BUILDDIR}
    cp -rf ${UNPACK_PATH}/${EXTRACTSTO}/* .

    # make sure no other invalid PETSC_DIR is set:
    unset PETSC_DIR
    
    ${PYTHON_INTERPRETER} ./configure --prefix=${INSTALL_PATH} ${CONFOPTS}
    quit_if_fail "petsc ./configure failed"
    
    make all install
    quit_if_fail "petsc make all install failed"
}

package_specific_register () {
    export PETSC_DIR=${INSTALL_PATH}
    if [ ! -z "${PARMETIS_DIR}" ]; then
        export SCALAPACK_DIR=${INSTALL_PATH}
    fi
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${EXTRACTSTO}
    rm -f $CONFIG_FILE
    echo "
export PETSC_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE
    if [ ! -z "${PARMETIS_DIR}" ]; then
       echo "export SCALAPACK_DIR=${INSTALL_PATH}" >> $CONFIG_FILE
    fi
}

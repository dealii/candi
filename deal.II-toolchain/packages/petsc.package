################################################################################
## PETSc                                                                      ##
################################################################################

VERSION=3.24.0;CHECKSUM=2e798e2af5676d60132518878d83f842

#VERSION=3.22.4;CHECKSUM=97503bfdd921069b997dd875a60b7a0d

#VERSION=3.22.2;CHECKSUM=d18caed83d1bf351c4ccb574b0b376e5

#VERSION=3.21.6;CHECKSUM=ab98f5f22731549eda3ae2704b05e9f7

#VERSION=3.21.4;CHECKSUM=e8d76467696fcff970bd56c93dd83476

#VERSION=3.19.4;CHECKSUM=477c30e120498dba4fad01020d4b0ffc

#VERSION=3.18.6;CHECKSUM=8eb924facc586b3368536ad2b9df1d35

#VERSION=3.16.4
#CHECKSUM=7de82ee5543cba9a7c12ca00c81f0b87

#VERSION=3.13.1
#CHECKSUM=b8b99c4a16fbc7d6694a70af044dbaac

#VERSION=3.11.3
#CHECKSUM=e04cbb1aaccde4a33c8843e75a1fba15

#VERSION=3.7.6
#CHECKSUM=152c1f15f535af22fc015de1d3099db3

#VERSION=3.6.4
#CHECKSUM=e7a5253621253eef8f5a19ddc03dd0d4

NAME=petsc-${VERSION}
SOURCE=https://web.cels.anl.gov/projects/petsc/download/release-snapshots/
PACKING=.tar.gz

EXTRACTSTO=petsc-${VERSION}
BUILDCHAIN=custom

INSTALL_PATH=${INSTALL_PATH}/${EXTRACTSTO}


################################################################################

with64bit=0
if [ ${USE_64_BIT_INDICES} = ON ]; then
    with64bit=1
else
    with64bit=0
fi

CONFOPTS="\
  --with-debugging=0 \
  --with-shared-libraries=1 \
  --with-mpi=1 \
  --with-x=0 \
  --with-64-bit-indices=${with64bit}"


if [ ${USE_KOKKOS_WITH_CUDA} = ON ]; then
CONFOPTS="\
  ${CONFOPTS} \
  --with-kokkos=1 \
  --with-kokkos-kernels=1 \
  --with-cuda=1 \
  --with-cuda-dir=${CUDA_HOME} \
  --with-cuda-arch=${CUDA_ARCH} \
  --with-kokkos-dir=${KOKKOS_DIR} \
  --with-kokkos-kernels-dir=${KOKKOSKERNELS_DIR} \
  "
fi

# It would seem simpler to put the {C|CXX|F}OPTFLAGS directly into the
# CONFOPTS variable, but there is no easy way to quote the
# multiarguments and retain the quotes correctly when passing to
# PETSc. Instead, we specify the individual *OPTFLAGS in the call to
# ./configure below.
if [ ${NATIVE_OPTIMIZATIONS} = ON ]; then
    OPTFLAGS="-O3 -march=native -mtune=native"
else
    # These are the PETSc default:
    OPTFLAGS="-g -O"
fi

if [ ! -z "${HYPRE_DIR}" ]; then
  CONFOPTS="${CONFOPTS} --with-hypre=1 --with-hypre-dir=${HYPRE_DIR}"
else
  CONFOPTS="${CONFOPTS} --download-hypre=1"
fi

if [ ! -z "${CC}" ]; then
    CONFOPTS="${CONFOPTS} CC=${CC}"
fi

if [ ! -z "${CXX}" ]; then
    CONFOPTS="${CONFOPTS} CXX=${CXX}"
fi

if [ ! -z "${FC}" ]; then
    CONFOPTS="${CONFOPTS} FC=${FC}"
fi

if [ ! -z "${F77}" ]; then
    CONFOPTS="${CONFOPTS} F77=${F77}"
fi

if [ ! -z "${F90}" ]; then
    CONFOPTS="${CONFOPTS} F90=${F90}"
fi

if [ ! -z "${MKL_DIR}" ]; then
    cecho ${INFO} "petsc: configuration with MKL"
    cecho ${INFO} "petsc: configuration with blas-lapack-dir=${MKL_DIR}"
    CONFOPTS="${CONFOPTS} --with-blas-lapack-dir=${MKL_DIR}"
else
    if [ ! -z "${BLAS_LIB}" ]; then
        cecho ${INFO} "petsc: configuration with --with-blas-lapack-lib=${BLAS_LIB}"
        CONFOPTS="${CONFOPTS} --with-blas-lapack-lib=${BLAS_LIB}"
    fi
fi

# Add ParMETIS, if present
if [ ! -z "${PARMETIS_DIR}" ]; then
    cecho ${INFO} "PETSc: configuration with ParMETIS"
    CONFOPTS="${CONFOPTS} \
      --with-parmetis-dir=${PARMETIS_DIR} \
      --with-metis-dir=${PARMETIS_DIR}"
fi

if [ ! -z "${SCALAPACK_DIR}" ]; then
    cecho ${INFO} "PETSc: configuration with SCALAPACK"
    CONFOPTS="${CONFOPTS} \
      --with-scalapack-dir=${SCALAPACK_DIR}"
else
    CONFOPTS="${CONFOPTS} --download-scalapack=1"
fi

if [ ! -z "${MUMPS_DIR}" ]; then
    cecho ${INFO} "PETSc: configuration with MUMPS"
    CONFOPTS="${CONFOPTS} \
      --with-mumps-dir=${MUMPS_DIR}"
else
    CONFOPTS="${CONFOPTS} --download-mumps=1"
fi

################################################################################

package_specific_setup () {
    cd ${BUILDDIR}
    cp -rf ${UNPACK_PATH}/${EXTRACTSTO}/* .

    # Make sure we don't pick up any environment copies of PETSc variables. This
    # duplicates the same unset commands in candi.sh to ensure that, should this
    # function run as a shell script (i.e., not with the source command), they
    # are not reset by .bash_profile or some other shell initialization script.
    unset PETSC_DIR
    unset PETSC_ARCH

    ${PYTHON_INTERPRETER} ./configure --prefix=${INSTALL_PATH} ${CONFOPTS} COPTFLAGS="${OPTFLAGS}" CXXOPTFLAGS="${OPTFLAGS}" FOPTFLAGS="${OPTFLAGS}"
    quit_if_fail "petsc ./configure failed"
    
    make all install
    quit_if_fail "petsc make all install failed"
}

package_specific_register () {
    export PETSC_DIR=${INSTALL_PATH}
    if [ ! -z "${SCALAPACK_DIR}" ]; then
        export SCALAPACK_DIR=${INSTALL_PATH}
    fi
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${EXTRACTSTO}
    rm -f ${CONFIG_FILE}
    echo "
export PETSC_DIR=${INSTALL_PATH}
" >> ${CONFIG_FILE}
    if [ ! -z "${SCALAPACK_DIR}" ]; then
       echo "export SCALAPACK_DIR=${INSTALL_PATH}" >> ${CONFIG_FILE}
    fi
}
